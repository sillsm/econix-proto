// Code generated by protoc-gen-go.
// source: primitives.proto
// DO NOT EDIT!

/*
Package econix is a generated protocol buffer package.

It is generated from these files:
	primitives.proto

It has these top-level messages:
	Transaction
	Signature
	Trade
*/
package econix

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Transaction struct {
	Body             []byte       `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Signatures       []*Signature `protobuf:"bytes,2,rep,name=signatures" json:"signatures,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}

func (m *Transaction) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Transaction) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type Signature struct {
	Id               *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Signature        []byte  `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}

func (m *Signature) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Signature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Trade struct {
	Resource         *uint64 `protobuf:"varint,1,opt,name=resource" json:"resource,omitempty"`
	Quantity         *int32  `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}

func (m *Trade) GetResource() uint64 {
	if m != nil && m.Resource != nil {
		return *m.Resource
	}
	return 0
}

func (m *Trade) GetQuantity() int32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}
